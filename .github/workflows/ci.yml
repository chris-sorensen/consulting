name: CI

on:
  pull_request:

permissions:
  contents: read

jobs:
  html-validate:
    name: Validate HTML & links
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/stage-site

      # Validate HTML & CSS + check images/links (Nu HTML Validator + HTMLProofer)
      - uses: anishathalye/proof-html@v2 
        with:
          directory: ./site
          enforce_https: true
          check_html: true
          check_favicon: true
          check_opengraph: true
          check_css: true
          # Rewrite root-absolute /consulting/* to /
          swap_urls: >
            {"^/consulting/": "/"}

  link-check:
    name: Broken-link scan (lychee)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/stage-site

      # PRs: exclude live-only links; use a base URL to resolve /favicon.ico, etc.
      - uses: lycheeverse/lychee-action@v2   # Fast link checker
        if: github.event_name == 'pull_request'
        with:
          args: >-
            --verbose 
            --no-progress 
            --base-url "https://chris-sorensen.github.io/consulting/"
            --exclude "localhost|127\.0\.0\.1|chris-sorensen\\.github\\.io/consulting/reports/lighthouse/latest/?$"  
            ./site
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      # main: enforce everything (no excludes)
      - uses: lycheeverse/lychee-action@v2
        if: github.ref == 'refs/heads/main'
        with:
          args: -v -n ./site
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  markdown:
    name: Markdown lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: DavidAnson/markdownlint-cli2-action@v16
        with:
          globs: |
            **/*.md

  secrets:
    name: Secrets scan (gitleaks)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          # Ensure we have the full git history for gitleaks to scan
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --no-git --verbose --redact
        env:
          GITLEAKS_ENABLE_COMMENTS: "true"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  accessibility:
    name: Accessibility (pa11y-ci)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/stage-site

      # Serve the static files
      - run: npx http-server -p 8080 site -s & npx wait-on http://127.0.0.1:8080/index.html
      - run: npx pa11y-ci

  lighthouse:
    name: Run local Lighthouse CI gate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/stage-site
      - run: npm i -D @lhci/cli
      - run: npx http-server -p 39107 site -s & npx wait-on http://127.0.0.1:39107/index.html
      - run: |
          npx lhci autorun
      - name: Upload Lighthouse (local) reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-local-${{ github.run_id }}
          path: lhci-local/**
          retention-days: 7
