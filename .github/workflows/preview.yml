name: Deploy PR preview
on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  contents: write
  issues: write
  pull-requests: write

concurrency: preview-${{ github.event.pull_request.number || github.ref }}

jobs:
  preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/stage-site

      - name: Deploy (create/update/remove) preview
        uses: rossjrw/pr-preview-action@v1
        id: deploy
        with:
          source-dir: site
          preview-branch: gh-pages
          umbrella-dir: pr-preview
          action: auto

      - name: Wait for preview to be live
        run: |
          URL="${{ env.preview_url }}"
          for i in {1..60}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" "$URL" || true)
            if [ "$code" = "200" ]; then echo "OK"; exit 0; fi
            sleep 3
          done
          echo "Preview not reachable"; exit 1

      - name: Run Lighthouse against preview URL
        run: |
          npm i -D lighthouse@12

          mkdir -p lhci-local
          npx lighthouse ${{ env.preview_url }} \
            --output=json --output=html \
            --output-path="lhci-local/lighthouse" \
            --quiet \
            --chrome-flags="--headless=new --no-sandbox --disable-dev-shm-usage --disable-gpu"

      - name: Build compact JSON summary
        if: github.event.action != 'closed'
        shell: bash
        run: |
          node <<'NODE'
          const fs = require('fs');
          const path = 'lhci-local/lighthouse.report.json';
          const r = JSON.parse(fs.readFileSync(path, 'utf8'));
          const s = {
            perf: Math.round(r.categories.performance.score*100),
            a11y: Math.round(r.categories.accessibility.score*100),
            seo:  Math.round(r.categories.seo.score*100),
            best: Math.round(r.categories['best-practices'].score*100)
          };
          fs.writeFileSync('lhci-local/lighthouse-summary.json', JSON.stringify(s, null, 2));
          NODE
          cat lhci-local/lighthouse-summary.json

      - name: Export summary to env (for PR comment)
        if: github.event.action != 'closed'
        id: vars
        run: |
          jq -r '"perf=\(.perf)\na11y=\(.a11y)\nseo=\(.seo)\nbest=\(.best)"' lhci-local/lighthouse-summary.json >> "$GITHUB_ENV"

      - name: Upload PR artifacts
        if: always() && github.event.action != 'closed'
        uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: pr-${{ github.event.number }}-lighthouse
          path: lhci-local/

      - name: Comment Lighthouse scores on PR
        if: github.event.action != 'closed'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: lighthouse
          message: |
            **Lighthouse Report**
            Preview: ${{ env.preview_url }}

            - Performance: ${{ env.perf }}
            - Accessibility: ${{ env.a11y }}
            - Best Practices: ${{ env.best }}
            - SEO: ${{ env.seo }}

            _Full report artifact:_ ${{ steps.artifact-upload-step.outputs.artifact-url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
